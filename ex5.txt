# Step 1: Import necessary libraries
from sklearn import datasets
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report

# Step 2: Load the iris dataset
iris = datasets.load_iris()
features = iris.data
target = iris.target

# Step 3: Split the dataset into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=2)
print(x_train.shape, x_test.shape, y_train.shape, y_test.shape)  # Output: ((120, 4), (30, 4), (120,), (30,))

# Step 4: Scale the data
scaler = StandardScaler()
x_train_scaled = scaler.fit_transform(x_train)
x_test_scaled = scaler.transform(x_test)

# Step 5: Initialize KNN Classifier
knn = KNeighborsClassifier(n_neighbors=3)

# Step 6: Train the model and make predictions
knn.fit(x_train_scaled, y_train)
y_pred = knn.predict(x_test_scaled)
print(classification_report(y_test, y_pred))  # Prints precision, recall, f1-score, etc.

# Step 7: Display correct and incorrect predictions
print("Index\tTrue Label\tPredicted Label\tPrediction Result")
for i in range(len(y_test)):
    if y_test[i] == y_pred[i]:
        print(i, "\t", y_test[i], "\t\t", y_pred[i], "\t\tcorrect")
    else:
        print(i, "\t", y_test[i], "\t\t", y_pred[i], "\t\twrong")